#include <stdio.h>
#include <string.h>

#define MAX_CONTACTS 100

typedef struct {
    char name[50];
    char phone[15];
} Contact;

typedef struct {
    Contact contacts[MAX_CONTACTS];
    int size;
} ContactList;


void initializeList(ContactList *list);
void addContact(ContactList *list, const char *name, const char *phone);
void deleteContact(ContactList *list, const char *name);
void displayContacts(const ContactList *list);

int main() {
    ContactList list;
    initializeList(&list);

    int choice;
    char name[50], phone[15];

    while (1) {
        printf("\nContact List Application\n");
        printf("1. Add Contact\n");
        printf("2. Delete Contact\n");
        printf("3. Display Contacts\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); 

        switch (choice) {
            case 1:
                printf("Enter name: ");
                fgets(name, sizeof(name), stdin);
                name[strcspn(name, "\n")] = '\0';
                printf("Enter phone number: ");
                fgets(phone, sizeof(phone), stdin);
                phone[strcspn(phone, "\n")] = '\0'; 
                addContact(&list, name, phone);
                break;
            case 2:
                printf("Enter name of contact to delete: ");
                fgets(name, sizeof(name), stdin);
                name[strcspn(name, "\n")] = '\0';
                deleteContact(&list, name);
                break;
            case 3:
                displayContacts(&list);
                break;
            case 4:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}

void initializeList(ContactList *list) {
    list->size = 0;
}


void addContact(ContactList *list, const char *name, const char *phone) {
    if (list->size >= MAX_CONTACTS) {
        printf("Contact list is full!\n");
        return;
    }
    strcpy(list->contacts[list->size].name, name);
    strcpy(list->contacts[list->size].phone, phone);
    list->size++;
    printf("Contact added successfully.\n");
}

void deleteContact(ContactList *list, const char *name) {
    int i, found = 0;
    for (i = 0; i < list->size; i++) {
        if (strcmp(list->contacts[i].name, name) == 0) {
            found = 1;
            break;
        }
    }

    if (found) {
        for (int j = i; j < list->size - 1; j++) {
            list->contacts[j] = list->contacts[j + 1];
        }
        list->size--;
        printf("Contact deleted successfully.\n");
    } else {
        printf("Contact not found.\n");
    }
}

void displayContacts(const ContactList *list) {
    if (list->size == 0) {
        printf("No contacts to display.\n");
    } else {
        printf("\nContact List:\n");
        for (int i = 0; i < list->size; i++) {
            printf("Name: %s, Phone: %s\n", list->contacts[i].name, list->contacts[i].phone);
        }
    }
}
